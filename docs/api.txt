#Get All Queues
method: GET
url: /queues
Example:
  Response Data: [{Queue}, {Queue}, {Queue}]

#Get Queue
method: GET
url: /queues/:id
Example:
  Response Data: {
    _id: 38274hfdusygfds238hfds,
    name: "New Queue",
    shareId: "d4G5d8A",
    lastAccessed: someDate,
    songs: [...],
    currentSong: 0
  }

#Create New Queue
method: POST
url: /queues
Example:
  Request Data: {
    name: "New Queue",
    passphrase: "secret",
    songs: [...],
    currentSong: 0
  }

  Response Data: {
    _id: 38274hfdusygfds238hfds,
    name: "New Queue",
    shareId: "d4G5d8A",
    passphrase: "secret",
    lastAccessed: someDate,
    songs: [...],
    currentSong: 0
  }

#Update Queue
method: PUT
url: /queues/:id
Example:
  Request Data
  {
    anyKey: value
  }

  Response Data: {Queue}

#Add song to Queue
method: POST
url: /queues/:id/add
(can either pass an array of song objects, or a single song object)
Example:
  Request Data: {
    url: "http://youtube.com/watch?v=38942hghg",
    service: "youtube",
    serviceId: "38942hghg",
    title: "Back in Black - Live...",
    artist: null, //Optional param
    duration: 180 //in Seconds
  }

  Response Data: {
    url: "http://youtube.com/watch?v=38942hghg...",
    service: "youtube",
    serviceId: "38942hghg",
    title: "Back in Black - Live...",
    artist: null, //Optional param
    duration: 180 //in Seconds
  }

#Remove Song from Queue
method: DELETE
url: /queues/:id/:index
Example:
  Request Data: {
    index: 5
  }

  Response: {
    Song(That was deleted)
  }

#Get All playlists of a user
method: GET
url: /:user/playlists
Example: [{name: "dfsa", shareId: "e8Cy"}, {playlist}, {playlist}...]

#Get playlist
use Get Queue

#Create playlist
method: POST
url: /user/playlists
Example:
  Request Data: {
    name: "New Playlist",
    songs: [...]
  }

  Response Data: {
    name: "New Playlist",
    id: "7483957238402",
    songs: [...]
  }

#Update playlist
use Queue Endpoint

#Add song to playlist
use Queue Endpoint

#Remove Song from playlist
use Queue Endpoint